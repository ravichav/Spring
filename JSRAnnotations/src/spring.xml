<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	   					   

<bean id="triangle" class="Triangle">
<property name="pointA" ref="zeroPoint"/>   <!-- Dependency Injection Spring provides -->
<property name="pointB" ref="pointB"/>
<!-- <property name="pointC" ref="pointC"/> pointC is not defined anywhere-->
</bean>

<bean id="zeroPoint" class="Point">   <!-- equivalent to calling new Point() -->
<property name="x" value="0" />
<property name="y" value="0" />
</bean>

<bean id="pointB" class="Point">   
<property name="x" value="-20" />
<property name="y" value="0" />
</bean>
<!-- 
1)use id name pointC with @Resource.
2)If you don't specify the name, in that case id center should match with Point center of Circle
 3)init and destroy method using JSR Annotation @PostConstruct and @PreDestroy
 -->
<!-- <bean id="pointC" class="Point"> -->
  <bean id="center" class="Point">
<property name="x" value="20" />
<property name="y" value="0" />
</bean>

<bean id="circle" class="Circle">
<!-- not specifying any dependency --> 
</bean>
<context:annotation-config/>
</beans> 